apiVersion: tekton.dev/v1
kind: Task
metadata:
  name: artifact-web-server-task
  namespace: tekton-pipelines
  labels:
    app.kubernetes.io/version: "0.1"
    app.kubernetes.io/name: "rapids-artifacts-web-server"
spec:
  description: >-
    Generate and serve a web interface for browsing and downloading notebook artifacts
    organized by notebook type and execution batch
  workspaces:
  - name: shared-storage
    description: Shared workspace containing all pipeline artifacts
  params:
  - name: batch-id
    description: "Current batch identifier for organizing artifacts"
    type: string
    default: "unknown-batch"
  - name: web-port
    description: "Port to serve the web interface on"
    type: string
    default: "8080"
  steps:
  - name: organize-artifacts
    image: alpine:latest
    script: |
      #!/bin/sh
      set -eu
      
      echo "üóÇÔ∏è  Step 1: Organizing Artifacts by Batch and Notebook"
      echo "====================================================="
      
      cd $(workspaces.shared-storage.path)
      
      # Install required tools
      apk add --no-cache python3 py3-pip
      
      BATCH_ID="$(params.batch-id)"
      WEB_ROOT="web-artifacts"
      
      echo "üìã Current batch: $BATCH_ID"
      echo "üåê Web root: $WEB_ROOT"
      
      # Create web directory structure
      mkdir -p "$WEB_ROOT"/{by-notebook,by-batch,latest-run,static}
      
      # Find all pipeline-runs directories
      if ls pipeline-runs/run-* >/dev/null 2>&1; then
        echo "üìÅ Found pipeline-runs directories:"
        ls -la pipeline-runs/
        
        # Copy current batch to by-batch
        mkdir -p "$WEB_ROOT/by-batch/$BATCH_ID"
        
        # Process each run directory
        for run_dir in pipeline-runs/run-*; do
          if [ -d "$run_dir" ]; then
            run_name=$(basename "$run_dir")
            echo "üîç Processing: $run_name"
            
            # Determine notebook from SUMMARY.md if exists
            if [ -f "$run_dir/SUMMARY.md" ]; then
              notebook_id=$(grep "Notebook:" "$run_dir/SUMMARY.md" | head -1 | sed 's/.*Notebook: *//' | sed 's/ .*//' || echo "unknown")
              echo "   üìì Identified notebook: $notebook_id"
              
              # Copy to by-notebook structure
              mkdir -p "$WEB_ROOT/by-notebook/notebook-$notebook_id/$BATCH_ID"
              cp -r "$run_dir"/* "$WEB_ROOT/by-notebook/notebook-$notebook_id/$BATCH_ID/" || true
              
              # Copy to by-batch structure
              mkdir -p "$WEB_ROOT/by-batch/$BATCH_ID/notebook-$notebook_id"
              cp -r "$run_dir"/* "$WEB_ROOT/by-batch/$BATCH_ID/notebook-$notebook_id/" || true
              
              # Update latest-run
              mkdir -p "$WEB_ROOT/latest-run/notebook-$notebook_id"
              cp -r "$run_dir"/* "$WEB_ROOT/latest-run/notebook-$notebook_id/" || true
            else
              echo "   ‚ö†Ô∏è  No SUMMARY.md found, skipping organization"
            fi
          fi
        done
      else
        echo "‚ö†Ô∏è  No pipeline-runs directories found, creating sample structure"
        mkdir -p "$WEB_ROOT/sample-data"
        echo "No artifacts available yet" > "$WEB_ROOT/sample-data/README.txt"
      fi
      
      echo "‚úÖ Step 1 completed: Artifacts organized"

  - name: generate-web-index
    image: python:3.9-alpine
    script: |
      #!/bin/sh
      set -eu
      
      echo "üåê Step 2: Generating Web Interface"
      echo "=================================="
      
      cd $(workspaces.shared-storage.path)
      
      WEB_ROOT="web-artifacts"
      BATCH_ID="$(params.batch-id)"
      
      # Generate main index.html
      cat > "$WEB_ROOT/index.html" << 'EOF'
      <!DOCTYPE html>
      <html lang="en">
      <head>
          <meta charset="UTF-8">
          <meta name="viewport" content="width=device-width, initial-scale=1.0">
          <title>üöÄ RAPIDS SingleCell Analysis - Artifacts Browser</title>
          <style>
              * { margin: 0; padding: 0; box-sizing: border-box; }
              body { font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif; line-height: 1.6; color: #333; background: #f5f7fa; }
              .container { max-width: 1200px; margin: 0 auto; padding: 20px; }
              .header { background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); color: white; padding: 2rem; border-radius: 10px; margin-bottom: 2rem; text-align: center; }
              .header h1 { font-size: 2.5rem; margin-bottom: 0.5rem; }
              .header p { font-size: 1.1rem; opacity: 0.9; }
              .nav-tabs { display: flex; background: white; border-radius: 10px; padding: 5px; margin-bottom: 2rem; box-shadow: 0 2px 10px rgba(0,0,0,0.1); }
              .nav-tab { flex: 1; padding: 15px; text-align: center; border-radius: 8px; cursor: pointer; transition: all 0.3s; border: none; background: none; font-size: 1rem; }
              .nav-tab.active { background: #667eea; color: white; }
              .nav-tab:hover { background: #f0f4ff; }
              .content-area { background: white; border-radius: 10px; padding: 2rem; box-shadow: 0 2px 10px rgba(0,0,0,0.1); }
              .notebook-grid { display: grid; grid-template-columns: repeat(auto-fit, minmax(300px, 1fr)); gap: 20px; margin-top: 20px; }
              .notebook-card { background: #f8f9fa; border-radius: 10px; padding: 20px; border-left: 4px solid #667eea; }
              .notebook-card h3 { color: #667eea; margin-bottom: 10px; }
              .file-list { list-style: none; }
              .file-list li { padding: 8px 0; border-bottom: 1px solid #eee; display: flex; justify-content: between; align-items: center; }
              .file-list li:last-child { border-bottom: none; }
              .file-link { color: #667eea; text-decoration: none; flex: 1; }
              .file-link:hover { text-decoration: underline; }
              .file-size { color: #666; font-size: 0.9rem; margin-left: 10px; }
              .batch-info { background: #e3f2fd; padding: 15px; border-radius: 8px; margin-bottom: 20px; }
              .status-badge { display: inline-block; padding: 4px 8px; border-radius: 4px; font-size: 0.8rem; font-weight: bold; }
              .status-success { background: #d4edda; color: #155724; }
              .status-warning { background: #fff3cd; color: #856404; }
              .status-error { background: #f8d7da; color: #721c24; }
              .hidden { display: none; }
              .phase-timeline { display: flex; align-items: center; margin: 20px 0; }
              .phase-step { flex: 1; text-align: center; position: relative; }
              .phase-step::after { content: ''; position: absolute; top: 50%; right: -50%; width: 100%; height: 2px; background: #ddd; z-index: 1; }
              .phase-step:last-child::after { display: none; }
              .phase-number { width: 40px; height: 40px; border-radius: 50%; background: #ddd; color: white; display: flex; align-items: center; justify-content: center; margin: 0 auto 10px; font-weight: bold; z-index: 2; position: relative; }
              .phase-step.completed .phase-number { background: #28a745; }
              .phase-step.active .phase-number { background: #667eea; }
          </style>
      </head>
      <body>
          <div class="container">
              <div class="header">
                  <h1>üöÄ RAPIDS SingleCell Analysis</h1>
                  <p>Artifacts Browser & Download Center</p>
              </div>
              
              <div class="nav-tabs">
                  <button class="nav-tab active" onclick="showTab('by-notebook')">üìì By Notebook</button>
                  <button class="nav-tab" onclick="showTab('by-batch')">üì¶ By Batch</button>
                  <button class="nav-tab" onclick="showTab('latest')">‚≠ê Latest Run</button>
              </div>
              
              <div class="content-area">
                  <div id="by-notebook-content" class="tab-content">
                      <h2>üìì Browse by Notebook Type</h2>
                      <p>Explore artifacts organized by individual notebook analysis type</p>
                      <div class="notebook-grid" id="notebook-grid">
                          <!-- Will be populated by JavaScript -->
                      </div>
                  </div>
                  
                  <div id="by-batch-content" class="tab-content hidden">
                      <h2>üì¶ Browse by Execution Batch</h2>
                      <p>View complete execution batches with all 5 notebooks</p>
                      <div class="batch-info">
                          <strong>Current Batch:</strong> BATCH_ID_PLACEHOLDER
                      </div>
                      <div id="batch-list">
                          <!-- Will be populated by JavaScript -->
                      </div>
                  </div>
                  
                  <div id="latest-content" class="tab-content hidden">
                      <h2>‚≠ê Latest Execution Results</h2>
                      <p>Quick access to the most recent analysis results</p>
                      
                      <div class="phase-timeline">
                          <div class="phase-step completed">
                              <div class="phase-number">1</div>
                              <div>Preprocessing</div>
                          </div>
                          <div class="phase-step completed">
                              <div class="phase-number">2</div>
                              <div>Extended Analysis</div>
                          </div>
                          <div class="phase-step active">
                              <div class="phase-number">3</div>
                              <div>Pearson Residuals</div>
                          </div>
                          <div class="phase-step">
                              <div class="phase-number">4</div>
                              <div>Dask Out-of-Core</div>
                          </div>
                          <div class="phase-step">
                              <div class="phase-number">5</div>
                              <div>Multi-GPU</div>
                          </div>
                      </div>
                      
                      <div class="notebook-grid" id="latest-grid">
                          <!-- Will be populated by JavaScript -->
                      </div>
                  </div>
              </div>
          </div>
          
          <script>
              function showTab(tabName) {
                  // Hide all tab contents
                  document.querySelectorAll('.tab-content').forEach(content => {
                      content.classList.add('hidden');
                  });
                  
                  // Remove active class from all tabs
                  document.querySelectorAll('.nav-tab').forEach(tab => {
                      tab.classList.remove('active');
                  });
                  
                  // Show selected tab content
                  document.getElementById(tabName + '-content').classList.remove('hidden');
                  
                  // Add active class to selected tab
                  event.target.classList.add('active');
                  
                  // Load content based on tab
                  if (tabName === 'by-notebook') {
                      loadNotebookContent();
                  } else if (tabName === 'by-batch') {
                      loadBatchContent();
                  } else if (tabName === 'latest') {
                      loadLatestContent();
                  }
              }
              
              function loadNotebookContent() {
                  const grid = document.getElementById('notebook-grid');
                  // This would be populated by scanning the by-notebook directory
                  grid.innerHTML = `
                      <div class="notebook-card">
                          <h3>üìì Notebook 01 - Preprocessing</h3>
                          <ul class="file-list">
                              <li><a href="by-notebook/notebook-01/" class="file-link">Browse all versions</a></li>
                              <li><a href="latest-run/notebook-01/output_analysis.html" class="file-link">Latest HTML Report</a> <span class="file-size">2.3 MB</span></li>
                              <li><a href="latest-run/notebook-01/output_analysis.ipynb" class="file-link">Latest Notebook</a> <span class="file-size">1.8 MB</span></li>
                          </ul>
                      </div>
                      <div class="notebook-card">
                          <h3>üìì Notebook 02 - Extended Analysis</h3>
                          <ul class="file-list">
                              <li><a href="by-notebook/notebook-02/" class="file-link">Browse all versions</a></li>
                              <li><a href="latest-run/notebook-02/output_analysis.html" class="file-link">Latest HTML Report</a> <span class="file-size">3.1 MB</span></li>
                              <li><a href="latest-run/notebook-02/output_analysis.ipynb" class="file-link">Latest Notebook</a> <span class="file-size">2.4 MB</span></li>
                          </ul>
                      </div>
                  `;
              }
              
              function loadBatchContent() {
                  const batchList = document.getElementById('batch-list');
                  batchList.innerHTML = `
                      <div class="notebook-card">
                          <h3>üì¶ Batch: BATCH_ID_PLACEHOLDER</h3>
                          <ul class="file-list">
                              <li><a href="by-batch/BATCH_ID_PLACEHOLDER/notebook-01/" class="file-link">üìì Notebook 01 - Preprocessing</a> <span class="status-badge status-success">‚úÖ Success</span></li>
                              <li><a href="by-batch/BATCH_ID_PLACEHOLDER/notebook-02/" class="file-link">üìì Notebook 02 - Extended Analysis</a> <span class="status-badge status-success">‚úÖ Success</span></li>
                              <li><a href="by-batch/BATCH_ID_PLACEHOLDER/notebook-03/" class="file-link">üìì Notebook 03 - Pearson Residuals</a> <span class="status-badge status-warning">‚è≥ Running</span></li>
                              <li><a href="by-batch/BATCH_ID_PLACEHOLDER/notebook-04/" class="file-link">üìì Notebook 04 - Dask Out-of-Core</a> <span class="status-badge">‚è∏Ô∏è Pending</span></li>
                              <li><a href="by-batch/BATCH_ID_PLACEHOLDER/notebook-05/" class="file-link">üìì Notebook 05 - Multi-GPU</a> <span class="status-badge">‚è∏Ô∏è Pending</span></li>
                          </ul>
                      </div>
                  `;
              }
              
              function loadLatestContent() {
                  loadNotebookContent(); // Reuse notebook content for latest
              }
              
              // Initialize page
              document.addEventListener('DOMContentLoaded', function() {
                  loadNotebookContent();
              });
          </script>
      </body>
      </html>
      EOF
      
      # Replace placeholder with actual batch ID
      sed -i "s/BATCH_ID_PLACEHOLDER/$BATCH_ID/g" "$WEB_ROOT/index.html"
      
      # Generate directory listings for each subdirectory
      echo "üìÅ Generating directory listings..."
      
      # Create simple directory listing for by-notebook
      for notebook_dir in "$WEB_ROOT/by-notebook"/*; do
        if [ -d "$notebook_dir" ]; then
          notebook_name=$(basename "$notebook_dir")
          cat > "$notebook_dir/index.html" << EOF
      <!DOCTYPE html>
      <html>
      <head>
          <title>$notebook_name - All Versions</title>
          <style>
              body { font-family: Arial, sans-serif; margin: 40px; }
              .header { color: #667eea; border-bottom: 2px solid #667eea; padding-bottom: 10px; }
              .file-list { list-style: none; padding: 0; }
              .file-list li { padding: 10px; border-bottom: 1px solid #eee; }
              .file-list a { color: #667eea; text-decoration: none; }
              .file-list a:hover { text-decoration: underline; }
              .back-link { margin-bottom: 20px; }
          </style>
      </head>
      <body>
          <div class="back-link"><a href="../../">‚Üê Back to Main</a></div>
          <div class="header">
              <h1>üìì $notebook_name - All Versions</h1>
          </div>
          <ul class="file-list">
      EOF
          
          # List all subdirectories (batch versions)
          for batch_dir in "$notebook_dir"/*; do
            if [ -d "$batch_dir" ]; then
              batch_name=$(basename "$batch_dir")
              echo "<li><a href=\"$batch_name/\">üì¶ Batch: $batch_name</a></li>" >> "$notebook_dir/index.html"
            fi
          done
          
          echo "</ul></body></html>" >> "$notebook_dir/index.html"
        fi
      done
      
      echo "‚úÖ Step 2 completed: Web interface generated"

  - name: start-web-server
    image: nginx:alpine
    script: |
      #!/bin/sh
      set -eu
      
      echo "üåê Step 3: Starting Web Server"
      echo "=============================="
      
      cd $(workspaces.shared-storage.path)
      
      WEB_PORT="$(params.web-port)"
      WEB_ROOT="web-artifacts"
      
      # Create nginx configuration
      cat > nginx.conf << EOF
      events {
          worker_connections 1024;
      }
      http {
          include       /etc/nginx/mime.types;
          default_type  application/octet-stream;
          
          server {
              listen $WEB_PORT;
              server_name localhost;
              
              location / {
                  root /$WEB_ROOT;
                  index index.html;
                  autoindex on;
                  autoindex_exact_size off;
                  autoindex_localtime on;
              }
              
              # Enable direct file downloads
              location ~* \.(ipynb|html|xml|log|txt|md)$ {
                  root /$WEB_ROOT;
                  add_header Content-Disposition "attachment";
              }
          }
      }
      EOF
      
      echo "üöÄ Starting nginx on port $WEB_PORT..."
      echo "üìÅ Serving directory: $WEB_ROOT"
      echo "üåê Web interface will be available at: http://localhost:$WEB_PORT"
      
      # Copy web files to nginx root
      cp -r "$WEB_ROOT" /
      
      # Start nginx
      nginx -c /workspace/shared-storage/nginx.conf -g "daemon off;"