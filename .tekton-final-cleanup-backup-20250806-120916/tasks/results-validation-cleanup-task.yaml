apiVersion: tekton.dev/v1
kind: Task
metadata:
  name: results-validation-cleanup-task
  namespace: tekton-pipelines
  labels:
    app.kubernetes.io/name: results-validation-cleanup-task
    app.kubernetes.io/component: tekton-task
    app.kubernetes.io/version: "1.0.0"
spec:
  description: |
    Validates results and performs cleanup operations.
    Based on step8-collect-artifacts from the reference workflow.
    
  params:
  - name: validation-notebooks
    type: string
    description: Comma-separated list of notebooks to validate
  - name: cleanup-cache
    type: string
    default: "false"
    description: Whether to cleanup cache files
  - name: preserve-outputs
    type: string
    default: "true"
    description: Whether to preserve output files
    
  workspaces:
  - name: shared-storage
    description: Workspace containing results to validate
  - name: dataset-cache
    description: Cache workspace for cleanup
    
  steps:
  - name: validate-and-collect
    image: alpine:latest
    env:
    - name: VALIDATION_NOTEBOOKS
      value: $(params.validation-notebooks)
    - name: CLEANUP_CACHE
      value: $(params.cleanup-cache)
    - name: PRESERVE_OUTPUTS
      value: $(params.preserve-outputs)
    script: |
      #!/bin/sh
      set -eu
      
      echo "üìã Step 8: Results Collection and Artifacts"
      echo "==========================================="
      
      cd "$(workspaces.shared-storage.path)"
      
      # Create collection directory
      mkdir -p collection
      
      echo "Validation notebooks: ${VALIDATION_NOTEBOOKS}"
      echo "Cleanup cache: ${CLEANUP_CACHE}"
      echo "Preserve outputs: ${PRESERVE_OUTPUTS}"
      
      # Validate specified notebooks
      echo ""
      echo "üîç Validating Results:"
      echo "====================="
      
      # Parse comma-separated notebook list
      NOTEBOOKS=$(echo "${VALIDATION_NOTEBOOKS}" | tr ',' '\n')
      TOTAL_FILES=0
      FOUND_FILES=0
      
      for notebook in $NOTEBOOKS; do
        TOTAL_FILES=$((TOTAL_FILES + 1))
        echo "Checking: $notebook"
        
        if [ -f "$notebook" ]; then
          size=$(du -h "$notebook" | cut -f1)
          echo "  ‚úÖ Found: $notebook (${size})"
          FOUND_FILES=$((FOUND_FILES + 1))
          
          # Copy to collection
          cp "$notebook" collection/
        else
          echo "  ‚ùå Missing: $notebook"
        fi
      done
      
      # Collect other artifacts
      echo ""
      echo "üì¶ Collecting Additional Artifacts:"
      echo "==================================="
      
      # Collect test results
      if [ -d "artifacts" ]; then
        echo "üìä Test artifacts found"
        cp -r artifacts collection/ || echo "Failed to copy artifacts"
        
        # List test artifacts
        find artifacts -type f | while read file; do
          size=$(du -h "$file" | cut -f1)
          echo "  üìÑ $file (${size})"
        done
      else
        echo "‚ö†Ô∏è  No test artifacts directory found"
      fi
      
      # Collect logs
      if [ -d "logs" ]; then
        echo "üìù Log files found"
        cp -r logs collection/ || echo "Failed to copy logs"
      fi
      
      # Summary
      echo ""
      echo "üìã Validation Summary:"
      echo "====================="
      echo "Files validated: ${FOUND_FILES}/${TOTAL_FILES}"
      echo "Success rate: $((FOUND_FILES * 100 / TOTAL_FILES))%"
      
      if [ "$FOUND_FILES" -eq "$TOTAL_FILES" ]; then
        echo "‚úÖ All validation checks passed"
      else
        echo "‚ö†Ô∏è  Some files are missing"
      fi
      
      # Cleanup if requested
      if [ "${CLEANUP_CACHE}" = "true" ]; then
        echo ""
        echo "üßπ Cleaning up cache..."
        rm -rf h5/*.tmp .cache/* 2>/dev/null || echo "Cache cleanup completed"
      fi
      
      # Generate final artifact list
      echo ""
      echo "üìÅ Final Artifact Collection:"
      echo "============================"
      find collection -type f | sort | while read file; do
        size=$(du -h "$file" | cut -f1)
        echo "$file (${size})"
      done
      
      echo "‚úÖ Results validation and cleanup completed"