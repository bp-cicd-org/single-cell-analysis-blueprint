# GPU Service Account Configuration for RAPIDS SingleCell Analysis
# ================================================================
# Service account with necessary permissions for GPU access and 
# resource management in Tekton pipelines.

apiVersion: v1
kind: ServiceAccount
metadata:
  name: tekton-gpu-executor
  namespace: tekton-pipelines
  labels:
    app.kubernetes.io/name: rapids-singlecell-analysis
    app.kubernetes.io/component: service-account
    app.kubernetes.io/version: "1.0.0"
  annotations:
    description: "Service account for GPU-enabled Tekton task execution"
    tekton.dev/gpu-enabled: "true"

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: tekton-gpu-executor-role
  labels:
    app.kubernetes.io/name: rapids-singlecell-analysis
    app.kubernetes.io/component: cluster-role
rules:
# Pod and container management
- apiGroups: [""]
  resources: ["pods", "pods/log", "pods/status"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]

# ConfigMap and Secret access for configuration
- apiGroups: [""]
  resources: ["configmaps", "secrets"]
  verbs: ["get", "list", "watch"]

# PVC management for data storage
- apiGroups: [""]
  resources: ["persistentvolumeclaims"]
  verbs: ["get", "list", "watch", "create", "update", "patch"]

# Node resource monitoring (for GPU availability)
- apiGroups: [""]
  resources: ["nodes"]
  verbs: ["get", "list", "watch"]

# Events for debugging
- apiGroups: [""]
  resources: ["events"]
  verbs: ["get", "list", "watch", "create"]

# Tekton TaskRun and PipelineRun management
- apiGroups: ["tekton.dev"]
  resources: ["taskruns", "pipelineruns", "tasks", "pipelines"]
  verbs: ["get", "list", "watch", "create", "update", "patch"]

# GPU resource monitoring
- apiGroups: ["metrics.k8s.io"]
  resources: ["nodes", "pods"]
  verbs: ["get", "list"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: tekton-gpu-executor-binding
  labels:
    app.kubernetes.io/name: rapids-singlecell-analysis
    app.kubernetes.io/component: cluster-role-binding
subjects:
- kind: ServiceAccount
  name: tekton-gpu-executor
  namespace: tekton-pipelines
roleRef:
  kind: ClusterRole
  name: tekton-gpu-executor-role
  apiGroup: rbac.authorization.k8s.io

---
# Additional Role for namespace-specific operations
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: tekton-gpu-executor-namespace-role
  namespace: tekton-pipelines
  labels:
    app.kubernetes.io/name: rapids-singlecell-analysis
    app.kubernetes.io/component: role
rules:
# Full access to all resources in tekton-pipelines namespace
- apiGroups: ["*"]
  resources: ["*"]
  verbs: ["*"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: tekton-gpu-executor-namespace-binding
  namespace: tekton-pipelines
  labels:
    app.kubernetes.io/name: rapids-singlecell-analysis
    app.kubernetes.io/component: role-binding
subjects:
- kind: ServiceAccount
  name: tekton-gpu-executor
  namespace: tekton-pipelines
roleRef:
  kind: Role
  name: tekton-gpu-executor-namespace-role
  apiGroup: rbac.authorization.k8s.io

---
# Secret for GitHub token (if needed for private repositories)
apiVersion: v1
kind: Secret
metadata:
  name: github-token-secret
  namespace: tekton-pipelines
  labels:
    app.kubernetes.io/name: rapids-singlecell-analysis
    app.kubernetes.io/component: secret
type: Opaque
data:
  # Default empty token - replace with actual token if needed
  # echo -n "your-github-token" | base64
  token: ""